[tool.poetry]
name = "pydantic-argparse"
version = "0.6.1"
description = "Typed Argument Parsing with Pydantic"
authors = ["Hayden Richards <SupImDos@gmail.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://pydantic-argparse.supimdos.com"
repository = "https://github.com/SupImDos/pydantic-argparse"
keywords = [
    "python",
    "pydantic",
    "argparse",
    "typed",
    "validation",
]
include = [
    "LICENSE.md",
]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^1.9.0"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.12.2"
flake8 = "^5.0.4"
flake8-bandit = "^4.1.1"
flake8-bugbear = "^22.9.23"
flake8-builtins = "^2.0.0"
flake8-docstrings = "^1.6.0"
flake8-pyproject = "^1.1.0"
flake8-pytest-style = "^1.6.0"
mypy = "^0.921"
pytest = "^6.2.5"
pytest-cov = {extras = ["toml"], version = "^3.0.0"}
pytest-mock = "^3.6.1"
mkdocs-material = "^8.1.8"
mkdocstrings = {extras = ["python-legacy"], version = "^0.19.0"}
mkdocs-gen-files = "^0.3.4"
mkdocs-literate-nav = "^0.4.1"
mkdocs-autorefs = "^0.3.1"

[tool.poe.tasks]
test = "pytest tests --cov=pydantic_argparse"
type = "mypy tests pydantic_argparse"
lint = "flake8 tests pydantic_argparse"
clean = "rm -rf **/.coverage **/.mypy_cache **/.pytest_cache **/__pycache__"
build = "poetry build"
publish = "poetry publish"
docs-serve = "mkdocs serve"
docs-publish = "mkdocs gh-deploy --force"

[tool.flake8]
max-line-length = 120
exclude = [".git", "__pycache__", ".pytest_cache", ".mypy_cache"]
per-file-ignores = ["__init__.py:F401", "tests/*.py:S101"]
enable-extensions = "G"
docstring-convention = "google"

[tool.pytest.ini_options]
addopts = "--verbose"
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s.%(msecs)03d [%(levelname)-8s] (%(name)-11s): %(message)s"
log_cli_date_format = "%Y%m%dT%H%M%S"

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "if __name__ == .__main__.:",
]

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_unimported = true
warn_return_any = true
warn_unused_ignores = true
no_implicit_optional = true
show_error_codes = true
plugins = [
    "pydantic.mypy"
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
